// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: robot.proto

#include "robot.pb.h"
#include "robot.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
namespace generated {

static const char* robot_com_method_names[] = {
  "/generated.robot_com/transmit_joints",
  "/generated.robot_com/transmit_voxels",
  "/generated.robot_com/transmit_tcps",
};

std::unique_ptr< robot_com::Stub> robot_com::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< robot_com::Stub> stub(new robot_com::Stub(channel, options));
  return stub;
}

robot_com::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_transmit_joints_(robot_com_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_transmit_voxels_(robot_com_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_transmit_tcps_(robot_com_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  {}

::grpc::ClientReader< ::generated::Joints>* robot_com::Stub::transmit_jointsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::generated::Joints>::Create(channel_.get(), rpcmethod_transmit_joints_, context, request);
}

void robot_com::Stub::async::transmit_joints(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::generated::Joints>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::generated::Joints>::Create(stub_->channel_.get(), stub_->rpcmethod_transmit_joints_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::generated::Joints>* robot_com::Stub::Asynctransmit_jointsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::generated::Joints>::Create(channel_.get(), cq, rpcmethod_transmit_joints_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::generated::Joints>* robot_com::Stub::PrepareAsynctransmit_jointsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::generated::Joints>::Create(channel_.get(), cq, rpcmethod_transmit_joints_, context, request, false, nullptr);
}

::grpc::ClientReader< ::generated::Voxel_TF_Meta>* robot_com::Stub::transmit_voxelsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::generated::Voxel_TF_Meta>::Create(channel_.get(), rpcmethod_transmit_voxels_, context, request);
}

void robot_com::Stub::async::transmit_voxels(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::generated::Voxel_TF_Meta>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::generated::Voxel_TF_Meta>::Create(stub_->channel_.get(), stub_->rpcmethod_transmit_voxels_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::generated::Voxel_TF_Meta>* robot_com::Stub::Asynctransmit_voxelsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::generated::Voxel_TF_Meta>::Create(channel_.get(), cq, rpcmethod_transmit_voxels_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::generated::Voxel_TF_Meta>* robot_com::Stub::PrepareAsynctransmit_voxelsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::generated::Voxel_TF_Meta>::Create(channel_.get(), cq, rpcmethod_transmit_voxels_, context, request, false, nullptr);
}

::grpc::ClientReader< ::generated::Tcps_TF_Meta>* robot_com::Stub::transmit_tcpsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::generated::Tcps_TF_Meta>::Create(channel_.get(), rpcmethod_transmit_tcps_, context, request);
}

void robot_com::Stub::async::transmit_tcps(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::generated::Tcps_TF_Meta>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::generated::Tcps_TF_Meta>::Create(stub_->channel_.get(), stub_->rpcmethod_transmit_tcps_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::generated::Tcps_TF_Meta>* robot_com::Stub::Asynctransmit_tcpsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::generated::Tcps_TF_Meta>::Create(channel_.get(), cq, rpcmethod_transmit_tcps_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::generated::Tcps_TF_Meta>* robot_com::Stub::PrepareAsynctransmit_tcpsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::generated::Tcps_TF_Meta>::Create(channel_.get(), cq, rpcmethod_transmit_tcps_, context, request, false, nullptr);
}

robot_com::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      robot_com_method_names[0],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< robot_com::Service, ::google::protobuf::Empty, ::generated::Joints>(
          [](robot_com::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::generated::Joints>* writer) {
               return service->transmit_joints(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      robot_com_method_names[1],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< robot_com::Service, ::google::protobuf::Empty, ::generated::Voxel_TF_Meta>(
          [](robot_com::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::generated::Voxel_TF_Meta>* writer) {
               return service->transmit_voxels(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      robot_com_method_names[2],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< robot_com::Service, ::google::protobuf::Empty, ::generated::Tcps_TF_Meta>(
          [](robot_com::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::generated::Tcps_TF_Meta>* writer) {
               return service->transmit_tcps(ctx, req, writer);
             }, this)));
}

robot_com::Service::~Service() {
}

::grpc::Status robot_com::Service::transmit_joints(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::generated::Joints>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status robot_com::Service::transmit_voxels(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::generated::Voxel_TF_Meta>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status robot_com::Service::transmit_tcps(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::generated::Tcps_TF_Meta>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace generated

