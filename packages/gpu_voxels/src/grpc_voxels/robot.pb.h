// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_robot_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_robot_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/empty.pb.h>
#include "vertex.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_robot_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_robot_2eproto {
  static const uint32_t offsets[];
};
namespace generated {
class joints;
struct jointsDefaultTypeInternal;
extern jointsDefaultTypeInternal _joints_default_instance_;
class voxels;
struct voxelsDefaultTypeInternal;
extern voxelsDefaultTypeInternal _voxels_default_instance_;
}  // namespace generated
PROTOBUF_NAMESPACE_OPEN
template<> ::generated::joints* Arena::CreateMaybeMessage<::generated::joints>(Arena*);
template<> ::generated::voxels* Arena::CreateMaybeMessage<::generated::voxels>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace generated {

// ===================================================================

class joints final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:generated.joints) */ {
 public:
  inline joints() : joints(nullptr) {}
  ~joints() override;
  explicit PROTOBUF_CONSTEXPR joints(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  joints(const joints& from);
  joints(joints&& from) noexcept
    : joints() {
    *this = ::std::move(from);
  }

  inline joints& operator=(const joints& from) {
    CopyFrom(from);
    return *this;
  }
  inline joints& operator=(joints&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const joints& default_instance() {
    return *internal_default_instance();
  }
  static inline const joints* internal_default_instance() {
    return reinterpret_cast<const joints*>(
               &_joints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(joints& a, joints& b) {
    a.Swap(&b);
  }
  inline void Swap(joints* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(joints* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  joints* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<joints>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const joints& from);
  void MergeFrom(const joints& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(joints* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generated.joints";
  }
  protected:
  explicit joints(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTheta1FieldNumber = 1,
    kTheta2FieldNumber = 2,
    kTheta3FieldNumber = 3,
    kTheta4FieldNumber = 4,
    kTheta5FieldNumber = 5,
    kTheta6FieldNumber = 6,
    kTheta7FieldNumber = 7,
  };
  // float theta_1 = 1;
  void clear_theta_1();
  float theta_1() const;
  void set_theta_1(float value);
  private:
  float _internal_theta_1() const;
  void _internal_set_theta_1(float value);
  public:

  // float theta_2 = 2;
  void clear_theta_2();
  float theta_2() const;
  void set_theta_2(float value);
  private:
  float _internal_theta_2() const;
  void _internal_set_theta_2(float value);
  public:

  // float theta_3 = 3;
  void clear_theta_3();
  float theta_3() const;
  void set_theta_3(float value);
  private:
  float _internal_theta_3() const;
  void _internal_set_theta_3(float value);
  public:

  // float theta_4 = 4;
  void clear_theta_4();
  float theta_4() const;
  void set_theta_4(float value);
  private:
  float _internal_theta_4() const;
  void _internal_set_theta_4(float value);
  public:

  // float theta_5 = 5;
  void clear_theta_5();
  float theta_5() const;
  void set_theta_5(float value);
  private:
  float _internal_theta_5() const;
  void _internal_set_theta_5(float value);
  public:

  // float theta_6 = 6;
  void clear_theta_6();
  float theta_6() const;
  void set_theta_6(float value);
  private:
  float _internal_theta_6() const;
  void _internal_set_theta_6(float value);
  public:

  // float theta_7 = 7;
  void clear_theta_7();
  float theta_7() const;
  void set_theta_7(float value);
  private:
  float _internal_theta_7() const;
  void _internal_set_theta_7(float value);
  public:

  // @@protoc_insertion_point(class_scope:generated.joints)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float theta_1_;
    float theta_2_;
    float theta_3_;
    float theta_4_;
    float theta_5_;
    float theta_6_;
    float theta_7_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2eproto;
};
// -------------------------------------------------------------------

class voxels final :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:generated.voxels) */ {
 public:
  inline voxels() : voxels(nullptr) {}
  ~voxels() override;
  explicit PROTOBUF_CONSTEXPR voxels(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  voxels(const voxels& from);
  voxels(voxels&& from) noexcept
    : voxels() {
    *this = ::std::move(from);
  }

  inline voxels& operator=(const voxels& from) {
    CopyFrom(from);
    return *this;
  }
  inline voxels& operator=(voxels&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const voxels& default_instance() {
    return *internal_default_instance();
  }
  static inline const voxels* internal_default_instance() {
    return reinterpret_cast<const voxels*>(
               &_voxels_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(voxels& a, voxels& b) {
    a.Swap(&b);
  }
  inline void Swap(voxels* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(voxels* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  voxels* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<voxels>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)  final;
  void CopyFrom(const voxels& from);
  void MergeFrom(const voxels& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(voxels* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "generated.voxels";
  }
  protected:
  explicit voxels(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVoxelCoordsFieldNumber = 3,
    kRobotOriginFieldNumber = 1,
    kVoxelSideLengthFieldNumber = 2,
  };
  // repeated .generated.vertex_3d_ui voxel_coords = 3;
  int voxel_coords_size() const;
  private:
  int _internal_voxel_coords_size() const;
  public:
  void clear_voxel_coords();
  ::generated::vertex_3d_ui* mutable_voxel_coords(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generated::vertex_3d_ui >*
      mutable_voxel_coords();
  private:
  const ::generated::vertex_3d_ui& _internal_voxel_coords(int index) const;
  ::generated::vertex_3d_ui* _internal_add_voxel_coords();
  public:
  const ::generated::vertex_3d_ui& voxel_coords(int index) const;
  ::generated::vertex_3d_ui* add_voxel_coords();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generated::vertex_3d_ui >&
      voxel_coords() const;

  // .generated.matrix robot_origin = 1;
  bool has_robot_origin() const;
  private:
  bool _internal_has_robot_origin() const;
  public:
  void clear_robot_origin();
  const ::generated::matrix& robot_origin() const;
  PROTOBUF_NODISCARD ::generated::matrix* release_robot_origin();
  ::generated::matrix* mutable_robot_origin();
  void set_allocated_robot_origin(::generated::matrix* robot_origin);
  private:
  const ::generated::matrix& _internal_robot_origin() const;
  ::generated::matrix* _internal_mutable_robot_origin();
  public:
  void unsafe_arena_set_allocated_robot_origin(
      ::generated::matrix* robot_origin);
  ::generated::matrix* unsafe_arena_release_robot_origin();

  // float voxel_side_length = 2;
  void clear_voxel_side_length();
  float voxel_side_length() const;
  void set_voxel_side_length(float value);
  private:
  float _internal_voxel_side_length() const;
  void _internal_set_voxel_side_length(float value);
  public:

  // @@protoc_insertion_point(class_scope:generated.voxels)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generated::vertex_3d_ui > voxel_coords_;
    ::generated::matrix* robot_origin_;
    float voxel_side_length_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_robot_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// joints

// float theta_1 = 1;
inline void joints::clear_theta_1() {
  _impl_.theta_1_ = 0;
}
inline float joints::_internal_theta_1() const {
  return _impl_.theta_1_;
}
inline float joints::theta_1() const {
  // @@protoc_insertion_point(field_get:generated.joints.theta_1)
  return _internal_theta_1();
}
inline void joints::_internal_set_theta_1(float value) {
  
  _impl_.theta_1_ = value;
}
inline void joints::set_theta_1(float value) {
  _internal_set_theta_1(value);
  // @@protoc_insertion_point(field_set:generated.joints.theta_1)
}

// float theta_2 = 2;
inline void joints::clear_theta_2() {
  _impl_.theta_2_ = 0;
}
inline float joints::_internal_theta_2() const {
  return _impl_.theta_2_;
}
inline float joints::theta_2() const {
  // @@protoc_insertion_point(field_get:generated.joints.theta_2)
  return _internal_theta_2();
}
inline void joints::_internal_set_theta_2(float value) {
  
  _impl_.theta_2_ = value;
}
inline void joints::set_theta_2(float value) {
  _internal_set_theta_2(value);
  // @@protoc_insertion_point(field_set:generated.joints.theta_2)
}

// float theta_3 = 3;
inline void joints::clear_theta_3() {
  _impl_.theta_3_ = 0;
}
inline float joints::_internal_theta_3() const {
  return _impl_.theta_3_;
}
inline float joints::theta_3() const {
  // @@protoc_insertion_point(field_get:generated.joints.theta_3)
  return _internal_theta_3();
}
inline void joints::_internal_set_theta_3(float value) {
  
  _impl_.theta_3_ = value;
}
inline void joints::set_theta_3(float value) {
  _internal_set_theta_3(value);
  // @@protoc_insertion_point(field_set:generated.joints.theta_3)
}

// float theta_4 = 4;
inline void joints::clear_theta_4() {
  _impl_.theta_4_ = 0;
}
inline float joints::_internal_theta_4() const {
  return _impl_.theta_4_;
}
inline float joints::theta_4() const {
  // @@protoc_insertion_point(field_get:generated.joints.theta_4)
  return _internal_theta_4();
}
inline void joints::_internal_set_theta_4(float value) {
  
  _impl_.theta_4_ = value;
}
inline void joints::set_theta_4(float value) {
  _internal_set_theta_4(value);
  // @@protoc_insertion_point(field_set:generated.joints.theta_4)
}

// float theta_5 = 5;
inline void joints::clear_theta_5() {
  _impl_.theta_5_ = 0;
}
inline float joints::_internal_theta_5() const {
  return _impl_.theta_5_;
}
inline float joints::theta_5() const {
  // @@protoc_insertion_point(field_get:generated.joints.theta_5)
  return _internal_theta_5();
}
inline void joints::_internal_set_theta_5(float value) {
  
  _impl_.theta_5_ = value;
}
inline void joints::set_theta_5(float value) {
  _internal_set_theta_5(value);
  // @@protoc_insertion_point(field_set:generated.joints.theta_5)
}

// float theta_6 = 6;
inline void joints::clear_theta_6() {
  _impl_.theta_6_ = 0;
}
inline float joints::_internal_theta_6() const {
  return _impl_.theta_6_;
}
inline float joints::theta_6() const {
  // @@protoc_insertion_point(field_get:generated.joints.theta_6)
  return _internal_theta_6();
}
inline void joints::_internal_set_theta_6(float value) {
  
  _impl_.theta_6_ = value;
}
inline void joints::set_theta_6(float value) {
  _internal_set_theta_6(value);
  // @@protoc_insertion_point(field_set:generated.joints.theta_6)
}

// float theta_7 = 7;
inline void joints::clear_theta_7() {
  _impl_.theta_7_ = 0;
}
inline float joints::_internal_theta_7() const {
  return _impl_.theta_7_;
}
inline float joints::theta_7() const {
  // @@protoc_insertion_point(field_get:generated.joints.theta_7)
  return _internal_theta_7();
}
inline void joints::_internal_set_theta_7(float value) {
  
  _impl_.theta_7_ = value;
}
inline void joints::set_theta_7(float value) {
  _internal_set_theta_7(value);
  // @@protoc_insertion_point(field_set:generated.joints.theta_7)
}

// -------------------------------------------------------------------

// voxels

// .generated.matrix robot_origin = 1;
inline bool voxels::_internal_has_robot_origin() const {
  return this != internal_default_instance() && _impl_.robot_origin_ != nullptr;
}
inline bool voxels::has_robot_origin() const {
  return _internal_has_robot_origin();
}
inline const ::generated::matrix& voxels::_internal_robot_origin() const {
  const ::generated::matrix* p = _impl_.robot_origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::generated::matrix&>(
      ::generated::_matrix_default_instance_);
}
inline const ::generated::matrix& voxels::robot_origin() const {
  // @@protoc_insertion_point(field_get:generated.voxels.robot_origin)
  return _internal_robot_origin();
}
inline void voxels::unsafe_arena_set_allocated_robot_origin(
    ::generated::matrix* robot_origin) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.robot_origin_);
  }
  _impl_.robot_origin_ = robot_origin;
  if (robot_origin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:generated.voxels.robot_origin)
}
inline ::generated::matrix* voxels::release_robot_origin() {
  
  ::generated::matrix* temp = _impl_.robot_origin_;
  _impl_.robot_origin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::generated::matrix* voxels::unsafe_arena_release_robot_origin() {
  // @@protoc_insertion_point(field_release:generated.voxels.robot_origin)
  
  ::generated::matrix* temp = _impl_.robot_origin_;
  _impl_.robot_origin_ = nullptr;
  return temp;
}
inline ::generated::matrix* voxels::_internal_mutable_robot_origin() {
  
  if (_impl_.robot_origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::generated::matrix>(GetArenaForAllocation());
    _impl_.robot_origin_ = p;
  }
  return _impl_.robot_origin_;
}
inline ::generated::matrix* voxels::mutable_robot_origin() {
  ::generated::matrix* _msg = _internal_mutable_robot_origin();
  // @@protoc_insertion_point(field_mutable:generated.voxels.robot_origin)
  return _msg;
}
inline void voxels::set_allocated_robot_origin(::generated::matrix* robot_origin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.robot_origin_);
  }
  if (robot_origin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(robot_origin));
    if (message_arena != submessage_arena) {
      robot_origin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, robot_origin, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.robot_origin_ = robot_origin;
  // @@protoc_insertion_point(field_set_allocated:generated.voxels.robot_origin)
}

// float voxel_side_length = 2;
inline void voxels::clear_voxel_side_length() {
  _impl_.voxel_side_length_ = 0;
}
inline float voxels::_internal_voxel_side_length() const {
  return _impl_.voxel_side_length_;
}
inline float voxels::voxel_side_length() const {
  // @@protoc_insertion_point(field_get:generated.voxels.voxel_side_length)
  return _internal_voxel_side_length();
}
inline void voxels::_internal_set_voxel_side_length(float value) {
  
  _impl_.voxel_side_length_ = value;
}
inline void voxels::set_voxel_side_length(float value) {
  _internal_set_voxel_side_length(value);
  // @@protoc_insertion_point(field_set:generated.voxels.voxel_side_length)
}

// repeated .generated.vertex_3d_ui voxel_coords = 3;
inline int voxels::_internal_voxel_coords_size() const {
  return _impl_.voxel_coords_.size();
}
inline int voxels::voxel_coords_size() const {
  return _internal_voxel_coords_size();
}
inline ::generated::vertex_3d_ui* voxels::mutable_voxel_coords(int index) {
  // @@protoc_insertion_point(field_mutable:generated.voxels.voxel_coords)
  return _impl_.voxel_coords_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generated::vertex_3d_ui >*
voxels::mutable_voxel_coords() {
  // @@protoc_insertion_point(field_mutable_list:generated.voxels.voxel_coords)
  return &_impl_.voxel_coords_;
}
inline const ::generated::vertex_3d_ui& voxels::_internal_voxel_coords(int index) const {
  return _impl_.voxel_coords_.Get(index);
}
inline const ::generated::vertex_3d_ui& voxels::voxel_coords(int index) const {
  // @@protoc_insertion_point(field_get:generated.voxels.voxel_coords)
  return _internal_voxel_coords(index);
}
inline ::generated::vertex_3d_ui* voxels::_internal_add_voxel_coords() {
  return _impl_.voxel_coords_.Add();
}
inline ::generated::vertex_3d_ui* voxels::add_voxel_coords() {
  ::generated::vertex_3d_ui* _add = _internal_add_voxel_coords();
  // @@protoc_insertion_point(field_add:generated.voxels.voxel_coords)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::generated::vertex_3d_ui >&
voxels::voxel_coords() const {
  // @@protoc_insertion_point(field_list:generated.voxels.voxel_coords)
  return _impl_.voxel_coords_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace generated

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_robot_2eproto
